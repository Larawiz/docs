(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{435:function(t,a,s){"use strict";s.r(a);var e=s(52),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"relations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relations"}},[t._v("#")]),t._v(" Relations")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://laravel.com/docs/eloquent-relationships",target:"_blank",rel:"noopener noreferrer"}},[t._v("Relations"),s("OutboundLink")],1),t._v(" in Larawiz are effortless. Just add the name of the relation, the type, and that's it.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("models")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("posts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hasMany\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" belongsTo\n")])])]),s("p",[t._v("Larawiz will guess the target model from the relation name, so "),s("code",[t._v("posts")]),t._v(" refers to the "),s("code",[t._v("Post")]),t._v(" model, and will use the primary column to connect both if necessary.")]),t._v(" "),s("p",[t._v("Alternatively, you can always set the name of the model, specially if you don't abide to Laravel naming conventions.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("models")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("publications")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hasMany"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Post\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("author")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" belongsTo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("User\n")])])]),s("h2",{attrs:{id:"total-control-on-relations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#total-control-on-relations"}},[t._v("#")]),t._v(" Total control on relations")]),t._v(" "),s("p",[t._v("If you declare a relation tables or columns, Larawiz will understand you want "),s("strong",[t._v("full control of the relation")]),t._v(" and won't guess or check anything from it.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("models")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("publications")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hasMany"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("publication_id\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Photo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" morphToMany"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("taggable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("taggables\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#...")]),t._v("\n")])])]),s("p",[t._v("In any case, if you want to make complex relationships, it's better to do them after scaffolding.")])])}),[],!1,null,null,null);a.default=n.exports}}]);